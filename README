--semant.cc is the main file and contains methods and classes--


Semantic (4th) phase of compilers project

There program architecture is OOP. There are three main Objects in the program for storing "program classes",
"the inheritance tree" and "the semantic environment".


Number of paces on the program tree: 5
For greater convenience and cleanliness, more than normal movements have been made on the tree


First round:
Adding the names of the existing classes in the program and checking the repetition of the class definition. if there are two different definitions under a same name, the first definition is considered.

Second round:
Adding inheritance property in classes and checking the existence of class ansestor.

Third round:
In this round, we look for the methods defined in each class and add the formals of the input and output decliered types of the method to the class object.

Fourth round:
Similar to the third round, we move on the attributes of the classes and add its name and type to the class account.

Fifth round:
In this round, everything we wanted to keep has been completed, and now we are going to cement the whole tree by moving on it.




For sementing attributes we confirm the logical rules, as said, and having the environment of all attributes, we apply the type adaptation for one attribute. For sementing methods, we first overwrite the parameters with their defined type in the formal environment, and then to We put the cement inside the method and after that we check the output type of the method.

What is not working correctly?

1. Line error always displays the first line. It can be defined due to not using the table class.

2. The file in which the class is stored is not considered and the given errors do not refer to the different file names.

3. The relationship of being subtyped in case of being self-typed does not work correctly everywhere because the corresponding function does not recognize this


What could have been done better?

When requesting the node type from the tree, it would be better if the output was of the symbol type instead of a string.
